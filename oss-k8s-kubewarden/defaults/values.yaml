# Common settings across multiple charts. These settings will be used
# by more than one chart and they ideally need to match during the
# installation of the charts consuming this values.
global:
  cattle:
    systemDefaultRegistry: registry.claas.com
  skipNamespaces: []
  policyServer:
    default:
      name: default
      enabled: true
# -- Additional labels to add to all resources
additionalLabels: {}
# app: kubewarden-defaults
# -- Additional annotations to add to all resources
additionalAnnotations: {}
# owner: IT-group1
# Policy Server settings
policyServer:
  replicaCount: 2
  minAvailable: "1"
  maxUnavailable: ""
  image:
    # The registry is defined in the global.cattle.systemDefaultRegistry value
    repository: "kubewarden/policy-server"
    tag: v1.12.0
  serviceAccountName: policy-server
  # verificationConfig: your_configmap
  # Configmap containing a Sigstore verification configuration under a key
  # named `verification-config`. Must be on the same ns as the PolicyServer.
  permissions:
  # All permissions are cluster-wide. Even namespaced resources are
  # granted access in all namespaces at this time.
  - apiGroup: ""
    resources:
    - namespaces
    - pods
    - services
  - apiGroup: "networking.k8s.io"
    resources:
    - ingresses
  env:
  - name: KUBEWARDEN_LOG_LEVEL
    value: info
  annotations: {}
  # follows the format of https://docs.kubewarden.io/operator-manual/CRDs#policyserversecurity
  securityContexts: {}
  # imagePullSecret stores the secret name used to pull images from repositories.
  # The secret should be in the same namespace of the Policy Server
  #
  # Example of usage:
  # imagePullSecret: "mysecret"
  imagePullSecret: null
  # insecureSources stores a list of allowed insecure registries.
  #
  # Example of usage:
  #insecureSources:
  #  - "source1"
  #  - "source2"
  insecureSources: null
  # sourceAuthorities is a list of the URIs and their PEM encoded certificates
  # used to authenticate them
  #
  # Example of usage:
  # sourceAuthorities:
  #   - uri: "uri1"
  #     certs:
  #       - "cert1"
  #       - "cert2"
  #   - uri: "uri2"
  #     certs:
  #       - "cert3"
  #   - uri: "uri3"
  #     certs:
  #       - "cert4"
  sourceAuthorities:
  - uri: registry.claas.com
    certs:
    - |
      -----BEGIN CERTIFICATE-----
      MIIGkDCCBHigAwIBAgIQfp1/f0WgRohOMSaCaogI8zANBgkqhkiG9w0BAQsFADBE
      MQswCQYDVQQGEwJERTEUMBIGA1UECgwLQ0xBQVMgR3JvdXAxHzAdBgNVBAMMFkNM
      QUFTIEMxIFJvb3QgQ0EgMDEgRzEwHhcNMjAwOTMwMDk1MTQzWhcNNDAwOTMwMDk1
      ODIyWjBEMQswCQYDVQQGEwJERTEUMBIGA1UECgwLQ0xBQVMgR3JvdXAxHzAdBgNV
      BAMMFkNMQUFTIEMxIFJvb3QgQ0EgMDEgRzEwggIiMA0GCSqGSIb3DQEBAQUAA4IC
      DwAwggIKAoICAQCSs3Z19ET1POeLyijaWqBVgHju3Amd6NBMEaUfEn+L/cCjKxWf
      XW6eBx9JL4v69VFa2Ah3tyjbH8w+Vn3YT0yKbpLCSIZBRAFxrTTHccwlmZ2vZFtV
      volE6OiCpMWjkq/DloTMf8a1E/ZokUBSsv7zYrQ83nnRtTnS3H1D8L5k/+xVzcFG
      hETODJov4yWvvnCmJuthuEL+dMngo+sKRyC/QlWfJpE5967mDJEszb1tTqNgsq1+
      VV3+8CluW5nY+ss23Zkos0+G53FTVsNPQRhCgqBG9nnhy3so7gwO8afOm8NXIqNp
      UbWGzGqbM/jwDlT/VHqaMbgrspCcWQf00WJ9gmsXO93SNqZh9O3NYT1NCfs9jt3L
      sKI1ll55SxWvScFb/6gI3UNrHWTKIrYcHdHlZ2qvPw0As+WiSV3I6lHIIKWCleT+
      Q1pN2pYdmrDO23T1YPsVvAFUA5HteVIi8pV99cSckGP+Uv43kI2fCXEo7yomEZYF
      JkM2sV7wYJaVzBESDIwap/JsvDDAEeWo6nCisbdzu70rkNTQWLgat7ojbz7s4wse
      4Ob4EslzQgOUEt0LSr4xr9V7FQVKxAy7E+3q+DY8mncvCB2bhKJ+Rm9/wgdtcKte
      72vy5ugam2jZqe3u9ZE1QjFN1BMn+sqhZmXhXTX1x1mIFCPYSsMs0HtVjQIDAQAB
      o4IBfDCCAXgwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0O
      BBYEFNozlYq228efUlLCHNf62agU1TX0MIIBNAYDVR0gBIIBKzCCAScwggEjBg4r
      BgEEAYLRQIN/AWQKATCCAQ8wKAYIKwYBBQUHAgEWHGh0dHA6Ly93d3cuYzEucGtp
      LmNsYWFzLmNvbS8wgeIGCCsGAQUFBwICMIHVHoHSAEMAZQByAHQAaQBmAGkAYwBh
      AHQAZQAgAFAAbwBsAGkAYwB5ACAAYQBuAGQAIABDAGUAcgB0AGkAZgBpAGMAYQB0
      AGkAbwBuACAAUAByAGEAYwB0AGkAYwBlACAAUwB0AGEAdABlAG0AZQBuAHQAIABv
      AGYAIAB0AGgAZQAgAEMATABBAEEAUwAgAEMAMQAgAFAASwBJAC4AIABVAG4AYQB1
      AHQAaABvAHIAaQB6AGUAZAAgAHUAcwBlACAAcAByAG8AaABpAGIAaQB0AGUAZAAu
      MA0GCSqGSIb3DQEBCwUAA4ICAQBOpD+zE52c+GGiuUMydf7Tgle2Tr/rFdthap/t
      NSauPKrtPgNJ2hY5pVaiZqqcUWG9WGgyaJy2rEJwSsZuKLVUi5zesuchNxVWdsPk
      NojjFxs13OvwDVe7fOJPTK86F2FyAA2SZaiFuzc1zHGaRUvyY4VbX1arYpULdIW6
      2imSIe8tW38BXC9cgHwpTKLiEp4gB+EjCHkA4n6Tybdkcmxb8iCw7+q5C26W5N0A
      ugVxi1lpKOYxjVA2BrwU8LI32RTqyKEW4/uhXmUdtcHJqyZjAaXqOmvqjk68J+HW
      8Fao7Zvg9y1yxoRTd4C3dmYMBNT213xArgfJne+V3r7MGUU+kC6qaSlRhMDGgYUj
      ilq+5jkdfjiY0BtNQGwrDRpi0yKKNJQrWlXrz3X2QFBlW1QQKTlMOro0/YNb0Ldy
      d30bXX3VeGa+n/nv9DnGjYX9jWH8EcWpZ2Rs/Ph6vLwEHRm9otXj7u1APTxabH9I
      fUtnr5aYkzhcWeS2sLIrjW6Qry/AfW/VY2OHOZVZEIK03J8lpQxsykd70PgzEI1A
      iNFrzABI4s7pqU4+4sJalIZ6NKhz2WYMpNbwMNsF8w1XQYI1qoKh6DuhEPADf69h
      pn4TIBrWzLllSaGdzQGKVqWddx77k2MXlwAxnoUq6wwMfjg5zrugNcKg7Z8UWEWo
      WSttvg==
      -----END CERTIFICATE-----
    - |
      -----BEGIN CERTIFICATE-----
      MIIHbzCCBVegAwIBAgITMAAAAAJ7075Ll2aLbgAAAAAAAjANBgkqhkiG9w0BAQsF
      ADBEMQswCQYDVQQGEwJERTEUMBIGA1UECgwLQ0xBQVMgR3JvdXAxHzAdBgNVBAMM
      FkNMQUFTIEMxIFJvb3QgQ0EgMDEgRzEwHhcNMjAxMDA3MDkzNDQ1WhcNMzAxMDA3
      MDk0NDQ1WjBDMQswCQYDVQQGEwJERTEUMBIGA1UECgwLQ0xBQVMgR3JvdXAxHjAc
      BgNVBAMMFUNMQUFTIEMxIFN1YiBDQSAwMSBHMTCCAiIwDQYJKoZIhvcNAQEBBQAD
      ggIPADCCAgoCggIBAMG7RkRCgOADjesoIPvGjKPhUvIo6hwN9NXORQF4PFe86RYC
      yMIXaRee8+huVGy6jQxv/mW9oQZK9DBQWpGr5X+/dHsei+bhQxGY72ZZZlfSga+u
      oHD7U8GoH8xjsE7SXLae4AVNTGixeOlWlOZCa1+kGExas+fZwOwAj7WaZPHihNzr
      ksEgt1kqpZWzZ6cZa0z/m5EZfCMj2/DGCl16zF1u7fnkHEJhn1cjLFqqs5735QaE
      VzHlZItZqude+5McBKyyXBjPnt3F2TVDzWb5JtHMuwZz1reMXFPgu6PBeXQgvEHP
      SvAK02DDBrANrZ9mqCgkEnJFWqzKOKw5Klv2L/5WYR6E2NSFeJ5izu4/fLUyuEeD
      f7vKNjf/6cItnLf2DkM4AtpIQfv6hcXQXaLVjsbeAXNS9zZMq/Wfhjehe5QduYdT
      NgLTKrQB6T7Z1K53pDbkjmECEHZyiSOYQyl2u9y5ciPDzsNBl3QAcT5S+JLYv8eE
      BwX0q1N9C71TJbpyT8v6BkMcy6lfaAjX2po1DMuRXctONaAbgrbxl5fLBBdhA9r4
      5kFcEIRg+1prZ36mam1mT7mIMvh7p3RoXTDPZTV5C0ufEoNQvcuFsHFnsbWkF46i
      As8E23LlzB9h1lM59J5X/wWl0/d8Q3JkNpW8hBMwaFoDjlSTVufZDieJz7AhAgMB
      AAGjggJZMIICVTAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFFU6z81O+e8tZXKg
      jSkOWecEFYGBMIIBNAYDVR0gBIIBKzCCAScwggEjBg4rBgEEAYLRQIN/AWQKATCC
      AQ8wKAYIKwYBBQUHAgEWHGh0dHA6Ly93d3cuYzEucGtpLmNsYWFzLmNvbS8wgeIG
      CCsGAQUFBwICMIHVHoHSAEMAZQByAHQAaQBmAGkAYwBhAHQAZQAgAFAAbwBsAGkA
      YwB5ACAAYQBuAGQAIABDAGUAcgB0AGkAZgBpAGMAYQB0AGkAbwBuACAAUAByAGEA
      YwB0AGkAYwBlACAAUwB0AGEAdABlAG0AZQBuAHQAIABvAGYAIAB0AGgAZQAgAEMA
      TABBAEEAUwAgAEMAMQAgAFAASwBJAC4AIABVAG4AYQB1AHQAaABvAHIAaQB6AGUA
      ZAAgAHUAcwBlACAAcAByAG8AaABpAGIAaQB0AGUAZAAuMBIGA1UdEwEB/wQIMAYB
      Af8CAQAwHwYDVR0jBBgwFoAU2jOVirbbx59SUsIc1/rZqBTVNfQwVQYDVR0fBE4w
      TDBKoEigRoZEaHR0cDovL2NkcC5jMS5wa2kuY2xhYXMuY29tL2NkcC9DTEFBUyUy
      MEMxJTIwUm9vdCUyMENBJTIwMDElMjBHMS5jcmwwYAYIKwYBBQUHAQEEVDBSMFAG
      CCsGAQUFBzAChkRodHRwOi8vYWlhLmMxLnBraS5jbGFhcy5jb20vYWlhL0NMQUFT
      JTIwQzElMjBSb290JTIwQ0ElMjAwMSUyMEcxLmNydDANBgkqhkiG9w0BAQsFAAOC
      AgEAMywZxRaeiIRGQNgNr51/Em15YN1hYyDjp29tsbAEjbmwzi0KXfHB8pJblDsk
      gXdUs42h0ZgpFXkXoKTBCI9dFmlyUzosVRdzetkFG6RvTlMmoAwjtEqgZQgvMKbF
      i2nHHW4C6ovo0FkB6+xI25me6ifBUleUFkPrs2pvzlgYjHtYLRZQu+2KuwAy6CTA
      87Q/m7Wa3RWt+sffIt27uv7zeFgugtBxkrQRkK7LQN+atLNcZnYI4IQuZ17QovJS
      j4ooIA4db+0wxMdACmd+iDjk/drIUjXD9IUk8qMOHxkaTfdkUs+hk5r+k9OoqEiM
      vzNZcRbOMF5zoC+aCAAo/QCVldJyl5ACe0ybfEcN99Fe7HISXrAuwhW3xov5Ley0
      Xtz0cjvnSC7j404WQXrEvTMAx4NC33Ry3AcEgLjBK8GXZyr3KWxtQ0C2LWB1w9g8
      e0Tycvv2CvTC0cR4QoYG7eIxzE7lCGXUsQHVQJLc0UrRilcsoACyN7EGLooWfpum
      5O0UhffBeKCRltjkMME/VvTcpNr/F0mVP5zLhgfJIXqt3qlxq8j1RS7hGv7go45G
      v3Kzw6IaHqST/yB9hJrRIuBVX5DI7JXhrxbjiftjSu0zYfMeG8x2AeQ507g9/Gso
      6COcvLd+I44E77OpcawkyBuh7wQNC1UGIPO9FT6GZTsQ89Y=
      -----END CERTIFICATE-----

  # affinity for pods of the default PolicyServer
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: kubewarden/policy-server
            operator: In
            values:
            - default
        topologyKey: kubernetes.io/hostname
  # limits and requests, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  limits: {}
  requests: {}
crdVersion: "policies.kubewarden.io/v1"
recommendedPolicies:
  enabled: false
